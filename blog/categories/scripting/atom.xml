<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scripting | Mostly Unixish]]></title>
  <link href="http://mostlyunixish.franzoni.eu/blog/categories/scripting/atom.xml" rel="self"/>
  <link href="http://mostlyunixish.franzoni.eu/"/>
  <updated>2013-10-09T09:02:17+02:00</updated>
  <id>http://mostlyunixish.franzoni.eu/</id>
  <author>
    <name><![CDATA[Alan Franzoni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quick log for bash scripts, with line limit]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2013/10/08/quick-log-for-bash-scripts/"/>
    <updated>2013-10-08T21:18:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2013/10/08/quick-log-for-bash-scripts</id>
    <content type="html"><![CDATA[<p>Sometimes you need to write a quick shell script; many a time, you need to put it on a server,
and launch it every now and then, or run it in a cron job. That script may end up doing something
important and/or altering the state of the server machine.</p>

<p>If that script starts being using often enough, you&rsquo;ll want logging as well, and that can be
a complex beast to tame, for logs require rotation and deletion, otherwise the beast will eat up
all your disk space. Setting up <a href="http://linuxcommand.org/man_pages/logrotate8.html">logrotate</a> for a
single shell script looks like an overkill to me most of the times.</p>

<p>So what? Many a times logging will be neglected, and you&rsquo;ll lose the ability to track what happened
and why.</p>

<p>This is my quick recipe for a basic bash logging solution with line-based truncation: the logfile
will never exceed <strong>RETAIN_NUM_LINES</strong> lines (actually, it will never exceed such size when the script
is launched, so the number of lines when the script has run is RETAIN_NUM_LINES + number of lines logged by
the script).</p>

<p>Whenever you use the <em>log</em> function you&rsquo;ll get output on stdout as well, complete with a timestamp.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (quicklog.sh)</span> <a href='/downloads/code/quicklog.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># set LOGFILE to the full path of your desired logfile; make sure</span>
</span><span class='line'><span class="c"># you have write permissions there. set RETAIN_NUM_LINES to the</span>
</span><span class='line'><span class="c"># maximum number of lines that should be retained at the beginning</span>
</span><span class='line'><span class="c"># of your program execution.</span>
</span><span class='line'><span class="c"># execute &#39;logsetup&#39; once at the beginning of your script, then </span>
</span><span class='line'><span class="c"># use &#39;log&#39; how many times you like.</span>
</span><span class='line'>
</span><span class='line'><span class="nv">LOGFILE</span><span class="o">=</span>quicklog.sh.log
</span><span class='line'><span class="nv">RETAIN_NUM_LINES</span><span class="o">=</span>10
</span><span class='line'>
</span><span class='line'><span class="k">function </span>logsetup <span class="o">{</span>
</span><span class='line'>    <span class="nv">TMP</span><span class="o">=</span><span class="k">$(</span>tail -n <span class="nv">$RETAIN_NUM_LINES</span> <span class="nv">$LOGFILE</span> 2&gt;/dev/null<span class="k">)</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&quot;${TMP}&quot;</span> &gt; <span class="nv">$LOGFILE</span>
</span><span class='line'>    <span class="nb">exec</span> &gt; &gt;<span class="o">(</span>tee -a <span class="nv">$LOGFILE</span><span class="o">)</span>
</span><span class='line'>    <span class="nb">exec </span>2&gt;&amp;1
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>log <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;[$(date)]: $*&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>logsetup
</span><span class='line'>
</span><span class='line'>log hello this is a log
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Launch this a lot of times and you&rsquo;ll end up with this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (quicklog.sh.log)</span> <a href='/downloads/code/quicklog.sh.log'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[Tue Oct  8 20:57:49 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:49 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:52 CEST 2013]: hello this is a log
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Enjoy!</p>
]]></content>
  </entry>
  
</feed>
