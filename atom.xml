<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mostly Unixish]]></title>
  <link href="http://mostlyunixish.franzoni.eu/atom.xml" rel="self"/>
  <link href="http://mostlyunixish.franzoni.eu/"/>
  <updated>2013-01-29T15:43:32+01:00</updated>
  <id>http://mostlyunixish.franzoni.eu/</id>
  <author>
    <name><![CDATA[Alan Franzoni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ssh-copy-id with nonstandard sshd port]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/11/06/ssh-copy-id-with-nonstandard-sshd-port/"/>
    <updated>2012-11-06T22:49:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/11/06/ssh-copy-id-with-nonstandard-sshd-port</id>
    <content type="html"><![CDATA[<p><a href="http://linux.die.net/man/1/ssh-copy-id">ssh-copy-id</a> is a cool script which is usually distributed along openssh client nowadays;
it performs an automatic install of your local public SSH key to a remote server. Its syntax is simply:</p>

<p><code>ssh-copy-id [-i [identity_file]] [user@]machine</code></p>

<p>You may have spotted there&#8217;s no builtin way of telling it what&#8217;s the port of the remote server; a workaround exists which leverages
the way arguments are passed to the script (it&#8217;s a simple bash file, take a look at it. You can find various versions around <a href="https://gist.github.com/378862">the internet</a>).</p>

<p>Just do this:</p>

<p><code>ssh-copy-id '-p [port_number] [-i [identity_file]] [user@]machine'</code></p>

<p>And enjoy your newly-added SSH key!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh client: stopping key verification complaints inside your own private network]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/08/26/ssh-client-stop-complaining-inside-my-network/"/>
    <updated>2012-08-26T15:55:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/08/26/ssh-client-stop-complaining-inside-my-network</id>
    <content type="html"><![CDATA[<p>If you develop enough software, most probably you&#8217;ll have a test/development network at your service.</p>

<p>In such networks, which are usually handled through a virtualization infrastructure, machines come and go very quickly.
But ssh clients are usually unhappy about that:</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
The authenticity of host '192.168.0.208 (192.168.0.208)' can't be established.
RSA key fingerprint is 31:4d:8b:97:c8:57:04:85:6a:1b:72:54:46:ab:04:bc.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.0.208' (RSA) to the list of known hosts.
root@192.168.0.208's password: 
</code></pre>

<p>The first time you connect, you&#8217;re asked if the fingerprint is correct. The second time you&#8217;ll just be allowed to connect:</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
root@192.168.0.208's password: 
</code></pre>

<p>What then if the machine at such ip address changes, because it&#8217;s rebuilt or modified and the ssh host key is not retained?</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that a host key has just been changed.
The fingerprint for the RSA key sent by the remote host is
7b:42:03:5f:5c:8d:5a:2b:6a:a4:1e:d6:0d:05:de:38.
Please contact your system administrator.
Add correct host key in /Users/alan/.ssh/known_hosts to get rid of this message.
Offending RSA key in /Users/alan/.ssh/known_hosts:111
  remove with: ssh-keygen -f "/Users/alan/.ssh/known_hosts" -R 192.168.0.208
RSA host key for 192.168.0.208 has changed and you have requested strict checking.
Host key verification failed.
</code></pre>

<p>From the point of view of openssh this may be a serious security breach, and you should fear such message if it happens in the wild if you haven&#8217;t touched a server -
a MitM attack is probably going on!</p>

<p>What about your local network? <code>ssh-keygen -R 192.168.0.208</code> will solve that, but you probably didn&#8217;t need host key authentication since the beginning.</p>

<p>So, just add this:</p>

<pre><code>Host 192.168.0.*
    CheckHostIP no
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no
</code></pre>

<p>at the beginning of your <code>/etc/ssh/ssh_config</code> file, and feel good.</p>

<p>Now, anytime you try connecting inside your network you&#8217;ll be greeted by this:</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
Warning: Permanently added '192.168.0.208' (RSA) to the list of known hosts.
root@192.168.0.208's password: 
</code></pre>

<p>No confirmations whatsoever.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thunderbird temporary directory]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/08/23/thunderbird-temporary-directory/"/>
    <updated>2012-08-23T20:18:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/08/23/thunderbird-temporary-directory</id>
    <content type="html"><![CDATA[<p>Whenever you use Thunderbird on Linux you may encounter one annoying behaviour.</p>

<p>If you open a message which is got an attachment - you just need to open the message, not to save the attachment! - Thunderbird will place such attachment in your temporary directory, usually <em>/tmp</em>. You find the file there, and you think you used the <em>Save as</em> function to place it there, so you open it and you edit it.</p>

<p>Then you close Thunderbird, and poof! It clears its temporary files and deletes your modified attachment, possibily containing a day&#8217;s work.</p>

<p>The workaround is simple: just use a launcher that changes Thunderbird TMP directory and use that to start Thunderbird!</p>

<figure class='code'><figcaption><span> (thunderbird)</span> <a href='http://mostlyunixish.franzoni.eu/downloads/code/thunderbird'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>mkdir -p /tmp/thunderbird
</span><span class='line'><span class="nv">TMP</span><span class="o">=</span>/tmp/thunderbird /usr/bin/thunderbird <span class="nv">$*</span>
</span></code></pre></td></tr></table></div></figure>


<p>You may need to adjust the original binary path, then you can put such script in your path before your /usr/bin directory and you&#8217;re done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disown is your friend]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/08/22/disown-is-your-friend/"/>
    <updated>2012-08-22T19:22:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/08/22/disown-is-your-friend</id>
    <content type="html"><![CDATA[<p>Bash builtin <em>disown</em> is a not-so-well known <a href="http://www.gnu.org/software/bash/manual/html_node/Job-Control-Builtins.html">job control command</a>, and yet
it&#8217;s an extremely useful one.</p>

<p>So what? You&#8217;ve started a remote ssh session, launched some command which is taking very, very long to complete, and you just want to go home, or maybe you
feel your connectivity may drop, and so on&#8230; and you forgot to launch <a href="http://www.gnu.org/software/screen">screen</a> (possibly with <a href="https://launchpad.net/byobu">byobu</a>)
or <a href="http://tmux.sourceforge.net">tmux</a> before starting your work!</p>

<p>Now you&#8217;re desperate and you&#8217;d just like to go home, but you fear your longstanding jobs will quit if you close your terminal.</p>

<p>Just background your job, launch <em>disown</em> and all the jobs in background will receive no notification whatsoever of your saying goodbye to them;
of course you won&#8217;t be able to read their output to the terminal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Purging outdated kernels on systems with unattended-upgrades]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/06/25/purging-outdated-kernels-on-systems-with-enabled-autoupdate/"/>
    <updated>2012-06-25T07:33:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/06/25/purging-outdated-kernels-on-systems-with-enabled-autoupdate</id>
    <content type="html"><![CDATA[<p>Whenever I install a production system/server I tend to enable full automatic updating, because
it&#8217;s usually better that something breaks because of a failed update rather than leaving a production machine unpatched; and if you pick a rather stable distribution (Centos or Ubuntu LTS are good examples) chances that you&#8217;ll end up with a broken system are fairly low.</p>

<p>Btw let&#8217;s get back to the point: in such cases you may end up with a disk which was filled up with obsolete kernels. The following snippets allows you to get all outdated kernels which are not in use, so you can automagically pipe its output to an <code>apt-get remove -y</code> in a cron job.</p>

<p>That may sound trivial, but what happens if you&#8217;re not careful (e.g. if you try deleting all kernels but the latest) is that you might try removing the currently running kernel - and it&#8217;s pretty bad if that happens in an unattended cron job.</p>

<figure class='code'><figcaption><span> (ubuntu_get_obsolete_kernel_and_headers_pkgs.py)</span> <a href='http://mostlyunixish.franzoni.eu/downloads/code/ubuntu_get_obsolete_kernel_and_headers_pkgs.py'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="c"># print all installed kernel/headers/etc BUT the current and the latest;</span>
</span><span class='line'><span class="c"># suitable to be used with apt-get remove.</span>
</span><span class='line'><span class="c"># requires aptitude to be installed. Works on Ubuntu and probably Debian</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">subprocess</span> <span class="kn">import</span> <span class="n">check_output</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">runcmd</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">check_output</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="c"># should work for anything until kernel 3.100</span>
</span><span class='line'><span class="n">kernel_version_pattern</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;[23]\.\d{1,2}\.\d{1,2}-\d{1,3}&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">get_kernel_version</span><span class="p">(</span><span class="n">kernelstring</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kernel_version_pattern</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">kernelstring</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_providing_packages</span><span class="p">(</span><span class="n">pkg</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="o">.</span><span class="n">strip</span><span class="p">,</span>
</span><span class='line'>            <span class="n">runcmd</span><span class="p">(</span><span class="s">&#39;aptitude search ~i~P</span><span class="si">%s</span><span class="s"> -F</span><span class="si">%%</span><span class="s">p&#39;</span> <span class="o">%</span> <span class="n">pkg</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">)</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_nonmatching_packages</span><span class="p">(</span><span class="n">package_list</span><span class="p">,</span> <span class="n">excluding</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">k</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">package_list</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">get_kernel_version</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="ow">in</span>
</span><span class='line'>        <span class="n">excluding</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">all_kernels</span> <span class="o">=</span> <span class="n">get_providing_packages</span><span class="p">(</span><span class="s">&quot;linux-image&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">all_kernels</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span> <span class="c"># lexicographical</span>
</span><span class='line'>
</span><span class='line'><span class="n">kernel_versions</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="n">get_kernel_version</span><span class="p">,</span> <span class="n">all_kernels</span><span class="p">)</span>
</span><span class='line'><span class="n">latest_version</span> <span class="o">=</span> <span class="n">kernel_versions</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="n">current_version</span> <span class="o">=</span> <span class="n">get_kernel_version</span><span class="p">(</span><span class="n">runcmd</span><span class="p">(</span><span class="s">&quot;uname -r&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">kernels_to_remove</span> <span class="o">=</span> <span class="n">get_nonmatching_packages</span><span class="p">(</span><span class="n">all_kernels</span><span class="p">,</span> <span class="p">(</span><span class="n">current_version</span><span class="p">,</span>
</span><span class='line'>    <span class="n">latest_version</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">all_headers</span> <span class="o">=</span> <span class="n">get_providing_packages</span><span class="p">(</span><span class="s">&quot;linux-headers&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">headers_to_remove</span> <span class="o">=</span> <span class="n">get_nonmatching_packages</span><span class="p">(</span><span class="n">all_headers</span><span class="p">,</span> <span class="p">(</span><span class="n">current_version</span><span class="p">,</span>
</span><span class='line'>    <span class="n">latest_version</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">kernels_to_remove</span> <span class="o">+</span> <span class="n">headers_to_remove</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Suggested use in a cron job, of course, is just:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get remove --purge `ubuntu_get_obsolete_kernel_and_headers_pkgs.py`</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox and Mercurial: and lived happily ever after]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/06/21/dropbox-and-mercurial-and-lived-happily-ever-after/"/>
    <updated>2012-06-21T13:12:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/06/21/dropbox-and-mercurial-and-lived-happily-ever-after</id>
    <content type="html"><![CDATA[<p>Some days ago I ranted about an issue I had with Mercurial and Dropbox; basically, I did put a mercurial repo in a dropbox
folder, and ended up with <a href="http://twitter.com/franzeur/statuses/214769401055035392/">this kind of mess</a></p>

<p>Mercurial repos inside Dropbox are not a great idea after all. But I had one problem: I sometimes forget to push changes to some files, and Dropbox comes to the rescue; at the same time I need history for such files, and I don&#8217;t want problems to arise.</p>

<p>I found quite an easy solution:</p>

<ul>
<li>Create your dropbox-aware folder, e.g. &#8220;somefolder&#8221;</li>
<li>create a .hg folder inside it, e.g. &#8220;somefolder/.hg&#8221;</li>
<li>now use your dropbox client, be it the CLI or the GUI, enable <a href="https://www.dropbox.com/help/175/en">Selective Sync</a> and remove such .hg folder from being synced on your current machine. You must take this step on all machines that you want to use with such technique.</li>
<li>disabling sync for .hg should remove it from the somefolder directory.</li>
</ul>


<p>Now you can use <code>hg init</code> inside &#8220;somefolder&#8221;, and you&#8217;ll obtain a non-synced hg repository.</p>

<p>What for? Whatever! I just create a repo on bitbucket and push/pull changes to/from here.</p>

<p>On other machines, after making sure you&#8217;ve excluded .hg from syncing, you can just use</p>

<p><code>hg clone -U YOUR_REPO_URL</code></p>

<p>to obtain such .hg directory.</p>

<p>This way:</p>

<ul>
<li>it&#8217;s impossible to get errors or conflicts like the one I previously mentioned</li>
<li>you get full storicization</li>
<li>Dropbox syncs the actual working copy, letting you have the latest version always 100% synced without manual intervention.</li>
</ul>


<p>Enjoy!</p>
]]></content>
  </entry>
  
</feed>
