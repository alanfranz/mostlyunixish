<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mostly Unixish]]></title>
  <link href="http://mostlyunixish.franzoni.eu/atom.xml" rel="self"/>
  <link href="http://mostlyunixish.franzoni.eu/"/>
  <updated>2014-12-16T12:16:29+01:00</updated>
  <id>http://mostlyunixish.franzoni.eu/</id>
  <author>
    <name><![CDATA[Alan Franzoni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unfreezing your desktop: when Compiz goes wrong]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2014/12/12/unfreeze-window-manager/"/>
    <updated>2014-12-12T08:50:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2014/12/12/unfreeze-window-manager</id>
    <content type="html"><![CDATA[<p>A desktop freeze is something that&rsquo;s not so rare nowadays &ndash; that&rsquo;s not good, but we shouldn&rsquo;t get desperate about that.</p>

<p>I like <a href="www.compiz.org">Compiz</a> with <a href="https://unity.ubuntu.com/">Unity Desktop</a> on my <a href="https://wiki.ubuntu.com/TrustyTahr/ReleaseNotes">Ubuntu Trusty</a> very much; <strong>I feel it&rsquo;s a step forward compared to traditional desktops</strong>. The only major nuisance I had on the previous versions was the inability to disable the global menu (which I like by itself, but I don&rsquo;t like the global menu disappearing when the mouse is not over it), but you can now disable it and have the menu on the window &ndash; even though you can&rsquo;t still enable an always-visible behaviour.</p>

<p>The problem is: compiz sometimes gets buggy. Running a different window manager, like <a href="https://help.ubuntu.com/community/Metacity">metacity</a> and/or <a href="http://cgit.freedesktop.org/xorg/app/xcompmgr/">xcompmgr</a> just doesn&rsquo;t seem good, you can experience other issues and you&rsquo;re using the stack in a way it wasn&rsquo;t designed for. I don&rsquo;t like that approach.</p>

<p>So, what can you do when your desktop freezes? The symptoms are usually very clear: you can move your mouse, but you can&rsquo;t click nor type anything.</p>

<p><strong>You don&rsquo;t need to reboot nor to restart X.</strong> You can fix this without losing your work.</p>

<h2>Get a raw tty</h2>

<p>Press <em>Ctrl+Alt+F1</em> and get to a raw linux console, and access with your credentials.</p>

<h2>Find and kill your stuck process</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pgrep compiz</span></code></pre></td></tr></table></div></figure>


<p>This will print the PID of our stuck window manager.</p>

<p>Let&rsquo;s kill it</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kill compiz</span></code></pre></td></tr></table></div></figure>


<p>This <strong>won&rsquo;t usually be enough</strong> because the process is really stuck: if you repeat the <em>pgrep</em> command above, you&rsquo;ll find it still running &ndash; i.e. pgrep will return the very same PID as above.</p>

<p>So let&rsquo;s kill it, really this time!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kill -9 compiz</span></code></pre></td></tr></table></div></figure>


<p>Then wait some 15-20 seconds.</p>

<p>Now, if you repeat the <em>pgrep</em> , you&rsquo;ll either see a) no result or b) a different PID.</p>

<p>If you see a different PID, it&rsquo;s Ubuntu that noticed the crashed process and relaunched it; press <em>Ctrl+Alt+F7</em>, and you should just get back a working desktop!</p>

<h2>Relaunching</h2>

<p>If you see nothing with pgrep, you&rsquo;ll need to relaunch Compiz manually.</p>

<p>You cannot simply relaunch compiz on the console, because it must connect to X: the proper way to do it is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>DISPLAY=:0 compiz</span></code></pre></td></tr></table></div></figure>


<p>Now switch back to your X instance with <em>Ctrl+Alt+F7</em> and enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don't give a shell to system users - use su]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2014/12/11/su-with-chosen-shell/"/>
    <updated>2014-12-11T13:17:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2014/12/11/su-with-chosen-shell</id>
    <content type="html"><![CDATA[<p>I seem very ancientwisdom-oriented these days.</p>

<p>Sometimes you&rsquo;ve got a system user on your linux server that&rsquo;s used to run a specific service; it&rsquo;s a good practice to employ those users to achieve <a href="http://en.wikipedia.org/wiki/Privilege_separation">privilege separation</a>, since it limits the impact of many security breaches. It&rsquo;s security 101, really.</p>

<p>If you&rsquo;ve got a system user, most probably its shell would be <code>/bin/false</code> or <code>/bin/nologin</code>. Again, this is a good practice, since it would be harder for an attacker to gain shell access to your machine through that user.</p>

<p>But I find that many people just <strong>change</strong> such shell, because sometimes they need to customize the environment for a user, and if you try doing something like</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>su - systemuser</span></code></pre></td></tr></table></div></figure>


<p>you&rsquo;ll find yourself just back to your original shell, because <strong>su</strong> tries to invoke the shell which is set for the target user, and <code>sudo</code> doesn&rsquo;t generally help here, because its <code>--shell</code> option doesn&rsquo;t start a proper login shell for that user (most of the environment is that of the calling user).</p>

<p>Very well, gentlemen: <strong>this is a wrongdoing and a potential security hole</strong>. You should <strong>never</strong> enable a shell for your system users. Instead, you should leverage an option of <strong>su</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>su - systemuser --shell /bin/bash</span></code></pre></td></tr></table></div></figure>


<p>That lets you choose your favourite shell on a per-launch basis.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Hostnames configuration and shortcuts]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2014/12/10/ssh-hostname-shortcuts/"/>
    <updated>2014-12-10T13:20:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2014/12/10/ssh-hostname-shortcuts</id>
    <content type="html"><![CDATA[<p>This is another old trick, but I like to tell the world about such amenities.</p>

<p>I often find people writing command lines such as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh arcane-system-user@someextremelylong.andimpossibiletotype.anderrorprone.hostname.com</span></code></pre></td></tr></table></div></figure>


<p>or, worse</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh idliketorememberwhichuser@10.20.30.40</span></code></pre></td></tr></table></div></figure>


<p>or maybe it was</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh someuserimashamedof@1.2.3.4</span></code></pre></td></tr></table></div></figure>


<p>yes, sometimes ssh is simply tedious.</p>

<p>But you can do better. In fact, you can do <strong>much</strong> better.</p>

<p>your <em>~/.ssh/config</em> or <em>/etc/ssh/ssh_config</em> can contain <strong>Host</strong> configuration sections; I have already blogged about such directives when I told the world about stopping <a href="blog/2012/08/26/ssh-client-stop-complaining-inside-my-network/">key verification compliants</a> &ndash; they&rsquo;re very flexible, indeed.</p>

<p>Consider adding <strong>Host</strong> directives in your configuration for your most used services:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Host myniceserver
</span><span class='line'>    Hostname myniceserver.mylove.com
</span><span class='line'>    Port 12345
</span><span class='line'>    User teddybear</span></code></pre></td></tr></table></div></figure>


<p>And then you can just</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh myniceserver</span></code></pre></td></tr></table></div></figure>


<p>You can override most options on a per-server basis and/or select a certain private key for connections.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I wish sudo would ask for my password less often]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2014/11/11/how-often-sudo-asks-for-your-password/"/>
    <updated>2014-11-11T13:28:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2014/11/11/how-often-sudo-asks-for-your-password</id>
    <content type="html"><![CDATA[<p>This is a <strong>very</strong> old trick, but I find many people doesn&rsquo;t know about it yet.</p>

<p>If you&rsquo;re using sudo <a href="https://help.ubuntu.com/community/RootSudo">(and you definitely should)</a>, one minor complaint is that you need to re-enter your password quite often.</p>

<p>One common pseudo-solution is to completely disable the password for executing sudo with such user; while it may be a good idea sometimes, it does decrease the overall security &ndash; if you happen to forget an open shell or screen/tmux lingering somewhere, you give total power to whoever gets in touch with it.</p>

<p>If you happen to let people into your sudo-enabled account with your ssh key, anybody that can get hold of your ssh key will get <strong>root access</strong> to your servers. It&rsquo;s not the best possible scenario.</p>

<p>There&rsquo;s a very simply workaround: just edit your sudoers file!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo visudo</span></code></pre></td></tr></table></div></figure>


<p>and add a line like that (or modify it if it&rsquo;s already there)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Defaults    timestamp_timeout=120</span></code></pre></td></tr></table></div></figure>


<p>This means that sudo will ask for a password every two hours instead of the default (15 minutes on most installations). You can use -1 in order to never let it expire (I don&rsquo;t suggest that &ndash; 8-10 hours should be enough for everybody.)</p>

<p>The only drawback is that such timeout is per shell, not system-wide &ndash; i.e. if you open multiple terminals, you&rsquo;ll have to enter the password again for each new terminal instance.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu: faster release upgrade]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2014/09/25/ubuntu-faster-release-upgrade/"/>
    <updated>2014-09-25T13:34:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2014/09/25/ubuntu-faster-release-upgrade</id>
    <content type="html"><![CDATA[<p>It might be high time to update to the latest <a href="https://wiki.ubuntu.com/TrustyTahr/ReleaseNotes">Ubuntu 14.04</a>.</p>

<p>I think that the upgrade process that is provided by Canonical is slightly underoptimal: if you&rsquo;re using a
local mirror which can provide a very fast download of all packages, they&rsquo;ll usually be disabled during the
upgrade process, and an official mirror (possibile one very far away) will be employed.</p>

<p>This can lead to a very slow and painful upgrade process.</p>

<p>The solution is easy.</p>

<p>The following instructions regard moving from 12.04 (precise) to 14.04 (trusty)</p>

<h2>Switch your sources</h2>

<p>Assuming that your official ubuntu sources are configured from <code>/etc/apt/sources.list</code> just do something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo sed -i.old -e 's/precise/trusty/g' /etc/apt/sources.list</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;m not considering other sources in <code>/etc/apt/sources.list.d</code>, since they&rsquo;ll be disabled whatsoever; but if you happen
to have ubuntu sources there as well, you should repeat the SEDding process for each file.</p>

<h2>Update your index</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update</span></code></pre></td></tr></table></div></figure>


<h2>Download updated packages without installing</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get dist-upgrade --download-only</span></code></pre></td></tr></table></div></figure>


<h2>Revert to old sources</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo mv -f /etc/apt/sources.list.old /etc/apt/sources.list</span></code></pre></td></tr></table></div></figure>


<h2>Update index again</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update</span></code></pre></td></tr></table></div></figure>


<h2>Rejoice!</h2>

<p>Now you can just follow the <a href="https://wiki.ubuntu.com/TrustyTahr/ReleaseNotes#Upgrading_from_Ubuntu_12.04_LTS_or_Ubuntu_13.10">upgrade instructions</a> and
almost nothing will be downloaded during the upgrade, because everything is already on your hard drive.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keep your tomcat instance up-to-date, and keep apps and configuration tidy.]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2014/09/03/keep-your-tomcat-instance-up-to-date-and-separate-configuration/"/>
    <updated>2014-09-03T19:52:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2014/09/03/keep-your-tomcat-instance-up-to-date-and-separate-configuration</id>
    <content type="html"><![CDATA[<p>Today I&rsquo;m gonna share something that I figured out some times ago: how do I keep
my <a href="http://tomcat.apache.org">tomcat</a> installation up to date on my servers?</p>

<p>Of course I&rsquo;m not willing to automatically switch majors, but I&rsquo;d like to pull bugfix
releases in as soon as possible; most of my servers should work unattended, and I prefer
to handle it if something crashes rather than being hacked because of some public exploit.</p>

<p>Apache Tomcat makes it incredibly hard to do so for different reasons: first, there&rsquo;s no <em>latest</em>
link for the latest release, you must first check the homepage to see what&rsquo;s the latest version;
second, the archive you can download mingles the application itself with the configuration, log
and webapp dir.</p>

<p>What should we do, then?</p>

<p>Tomcat allows us to configure almost everything. Let&rsquo;s use its power!</p>

<p>For this setup, I use Tomcat7 and I chose to employ <em>/etc/tomcat7/conf</em> as a configuration directory, <em>/opt/tomcat7/latest</em> as tomcat7 own directory, <em>/opt/tomcat7/webapps</em> for our webapps, <em>/opt/tomcat7/logs</em>,
<em>/opt/tomcat7/temp</em>, <em>/opt/tomcat7/work</em> as logging, temp and work directory, respectively.</p>

<p>To begin with, create a user (maybe a service user, I&rsquo;ll leave the details to you) <em>tomcat</em> with a main group <em>tomcat</em> as well, which we&rsquo;ll use to run the servlet container.</p>

<p>Now make sure your <a href="http://puppetlabs.com/">Puppet</a> manifest includes the tomcat7 class. In order to do so, you&rsquo;ll need this custom fact that helps the system determine the very latest tomcat7 version,
place it in your custom facts directory:</p>

<figure class='code'><figcaption><span>find_apache_tomcat7_latest.py </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'><span class="c"># add as fact, drop this into /etc/facter/facts.d/</span>
</span><span class='line'><span class="c"># requires python with lxml installed,(usually a python-lxml package is available in most distributions)</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">lxml.etree</span> <span class="kn">import</span> <span class="n">HTML</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">urllib</span>
</span><span class='line'>
</span><span class='line'><span class="n">pattern</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;^7\.0\.\d\d\d?$&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">root</span> <span class="o">=</span> <span class="n">HTML</span><span class="p">(</span><span class="n">urllib</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span><span class="s">&quot;http://tomcat.apache.org/download-70.cgi&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">root</span><span class="o">.</span><span class="n">iterdescendants</span><span class="p">():</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="nb">basestring</span><span class="p">)</span> <span class="ow">and</span> <span class="n">pattern</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">strip</span><span class="p">()):</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&quot;tomcat7_latest_version={0}&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
</span><span class='line'>      <span class="k">break</span>
</span></code></pre></td></tr></table></div></figure>


<p>and the tomcat7 class, of course:</p>

<figure class='code'><figcaption><span>tomcat7.pp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
</pre></td><td class='code'><pre><code class='puppet'><span class='line'><span class="c-Singleline"># this will install latest tomcat7 from apache website, and yet retain your</span>
</span><span class='line'><span class="c-Singleline"># config from /etc/tomcat7/conf</span>
</span><span class='line'><span class="c-Singleline"># tested with puppet 3.6</span>
</span><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">tomcat7</span> <span class="p">{</span>
</span><span class='line'>  <span class="nv">$tomcat_full_version</span> <span class="o">=</span> <span class="nv">$tomcat7_latest_version</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/tar xvf apache-tomcat-archive.tar.gz&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">creates</span> <span class="p">=&gt;</span><span class="s2">&quot;/opt/tomcat7/apache-tomcat7-</span><span class="si">${tomcat_full_version}</span><span class="s2">&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">cwd</span> <span class="p">=&gt;</span> <span class="s2">&quot;/opt/tomcat7&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">refreshonly</span> <span class="p">=&gt;</span> <span class="ss">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">alias</span> <span class="p">=&gt;</span> <span class="s2">&quot;tomcat7_unpack&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">require</span> <span class="p">=&gt;</span> <span class="nc">File</span><span class="p">[</span><span class="s2">&quot;/opt/tomcat&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">file</span> <span class="p">{</span> <span class="s2">&quot;/opt/tomcat&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">ensure</span> <span class="p">=&gt;</span> <span class="s2">&quot;directory&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">mode</span> <span class="p">=&gt;</span> <span class="m">0755</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">owner</span> <span class="p">=&gt;</span> <span class="s2">&quot;root&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">group</span> <span class="p">=&gt;</span> <span class="s2">&quot;root&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>      
</span><span class='line'>
</span><span class='line'>  <span class="nc">file</span> <span class="p">{</span> <span class="s2">&quot;/opt/tomcat7/apache-tomcat-archive.tar.gz&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">ensure</span> <span class="p">=&gt;</span> <span class="s2">&quot;present&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">source</span> <span class="p">=&gt;</span> <span class="s2">&quot;/tmp/apache-tomcat-</span><span class="si">${tomcat_full_version}</span><span class="s2">.tar.gz&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">require</span> <span class="p">=&gt;</span> <span class="nc">Exec</span><span class="p">[</span><span class="s2">&quot;tomcat7_download_latest&quot;</span><span class="p">],</span>
</span><span class='line'>      <span class="nt">notify</span> <span class="p">=&gt;</span> <span class="nc">Exec</span><span class="p">[</span><span class="s2">&quot;tomcat7_unpack&quot;</span><span class="p">]</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/usr/bin/wget --timestamping http://www.eu.apache.org/dist/tomcat/tomcat-7/v</span><span class="si">${tomcat_full_version}</span><span class="s2">/bin/apache-tomcat-</span><span class="si">${tomcat_full_version}</span><span class="s2">.tar.gz&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">alias</span> <span class="p">=&gt;</span> <span class="s2">&quot;tomcat7_download_latest&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">cwd</span> <span class="p">=&gt;</span> <span class="s2">&quot;/tmp&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/ln -sf --no-target-directory apache-tomcat-</span><span class="si">${tomcat_full_version}</span><span class="s2"> latest&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">refreshonly</span> <span class="p">=&gt;</span> <span class="ss">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">subscribe</span> <span class="p">=&gt;</span> <span class="nc">Exec</span><span class="p">[</span><span class="s2">&quot;tomcat7_unpack&quot;</span><span class="p">],</span>
</span><span class='line'>      <span class="nt">cwd</span> <span class="p">=&gt;</span> <span class="s2">&quot;/opt/tomcat7&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">alias</span> <span class="p">=&gt;</span> <span class="s2">&quot;tomcat7_symlink&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/rm -rf conf.orig &amp;&amp; /bin/mv -f conf conf.orig &amp;&amp; /bin/ln -sf --no-target-directory /etc/tomcat7/conf conf&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">refreshonly</span> <span class="p">=&gt;</span> <span class="ss">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">cwd</span> <span class="p">=&gt;</span> <span class="s2">&quot;/opt/tomcat7/latest&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">subscribe</span> <span class="p">=&gt;</span> <span class="nc">Exec</span><span class="p">[</span><span class="s2">&quot;tomcat7_symlink&quot;</span><span class="p">],</span>
</span><span class='line'>      <span class="c-Singleline"># notify =&gt; Service[&quot;tomcat7&quot;],</span>
</span><span class='line'>      <span class="nt">alias</span> <span class="p">=&gt;</span> <span class="s2">&quot;tomcat7_config_move&quot;</span>
</span><span class='line'>  <span class="p">}</span><span class="c-Singleline"></span>
</span><span class='line'>
</span><span class='line'><span class="c-Singleline">   # first-time only executions. I might like to abstract some logic if I were a bit less lazy than I am.</span>
</span><span class='line'><span class="c-Singleline">   # in order to stay on the safe side, we never let the normal user to access our files; this may be relaxed,</span>
</span><span class='line'><span class="c-Singleline">   # depending on your context.</span>
</span><span class='line'>
</span><span class='line'><span class="c-Singleline">   # this contains our config. our servlet container should be able to read it, but never write it.</span>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/mkdir -p /etc/tomcat7 &amp;&amp; /bin/cp -r /opt/tomcat7/latest/conf.orig /etc/tomcat7/conf &amp;&amp; /bin/chmod 0750 /etc/tomcat7/conf &amp;&amp; /bin/chown root:tomcat /etc/tomcat7/conf &quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">creates</span> <span class="p">=&gt;</span> <span class="s2">&quot;/etc/tomcat7/conf&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="nt">subscribe</span> <span class="p">=&gt;</span> <span class="nc">Exec</span><span class="p">[</span><span class="s2">&quot;tomcat7_config_move&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span><span class="c-Singleline"></span>
</span><span class='line'><span class="c-Singleline">   </span>
</span><span class='line'><span class="c-Singleline">   # this will contain the actual code of our webapps. Again, the container must be able to read them, </span>
</span><span class='line'><span class="c-Singleline">   # never write to them.</span>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/mkdir -p -m 0750 /opt/tomcat7/webapps &amp;&amp; /bin/chown root:tomcat /opt/tomcat7/webapps&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">creates</span> <span class="p">=&gt;</span> <span class="s2">&quot;/etc/tomcat7/webapps&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span><span class="c-Singleline"></span>
</span><span class='line'>
</span><span class='line'><span class="c-Singleline">   # those are working directories where the container must be able to write.</span>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/mkdir -p -m 0770 /opt/tomcat7/work &amp;&amp; /bin/chown root:tomcat /opt/tomcat7/work&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">creates</span> <span class="p">=&gt;</span> <span class="s2">&quot;/etc/tomcat7/work&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/mkdir -p -m 0770 /opt/tomcat7/temp &amp;&amp; /bin/chown root:tomcat /opt/tomcat7/temp&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">creates</span> <span class="p">=&gt;</span> <span class="s2">&quot;/etc/tomcat7/temp&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nc">exec</span> <span class="p">{</span> <span class="s2">&quot;/bin/mkdir -p -m 0770 /opt/tomcat7/logs &amp;&amp; /bin/chown root:tomcat /opt/tomcat7/logs&quot;</span><span class="p">:</span>
</span><span class='line'>      <span class="nt">creates</span> <span class="p">=&gt;</span> <span class="s2">&quot;/etc/tomcat7/logs&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>The tomcat7 service is trivial and omitted, fill it in by yourself (or delete it).</p>

<p>Once this is done, you&rsquo;ll find a base configuration in <em>/etc/tomcat7/conf</em>. We must now edit <em>server.xml</em> there and tell Tomcat where we&rsquo;d like to have our webapps, logs and work directories:</p>

<figure class='code'><figcaption><span>server.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- this should go inside &lt;Server&gt;&lt;Service&gt;&lt;Engine&gt; --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;Host</span> <span class="na">name=</span><span class="s">&quot;localhost&quot;</span>  <span class="na">appBase=</span><span class="s">&quot;/opt/tomcat7/webapps&quot;</span>
</span><span class='line'>            <span class="na">unpackWARs=</span><span class="s">&quot;false&quot;</span> <span class="na">autoDeploy=</span><span class="s">&quot;true&quot;</span> <span class="na">workDir=</span><span class="s">&quot;/opt/tomcat7/work&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">&lt;!-- SingleSignOn valve, share authentication between web applications</span>
</span><span class='line'><span class="c">             Documentation at: /docs/config/valve.html --&gt;</span>
</span><span class='line'>        <span class="c">&lt;!--</span>
</span><span class='line'><span class="c">        &lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&gt;</span>
</span><span class='line'><span class="c">        --&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">&lt;!-- Access log processes all example.</span>
</span><span class='line'><span class="c">             Documentation at: /docs/config/valve.html</span>
</span><span class='line'><span class="c">             Note: The pattern used is equivalent to using pattern=&quot;common&quot; --&gt;</span>
</span><span class='line'>        <span class="nt">&lt;Valve</span> <span class="na">className=</span><span class="s">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="na">directory=</span><span class="s">&quot;/opt/tomcat7/logs&quot;</span>
</span><span class='line'>               <span class="na">prefix=</span><span class="s">&quot;localhost_access_log.&quot;</span> <span class="na">suffix=</span><span class="s">&quot;.txt&quot;</span>
</span><span class='line'>               <span class="na">pattern=</span><span class="s">&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;/Host&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Last but not least, we should tell tomcat what is <em>CATALINA_HOME</em> and <em>CATALINA_TMPDIR</em>. This is an example script that can be used with upstart on Ubuntu 12.04, change it according to your OS:</p>

<figure class='code'><figcaption><span>tomcat7.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>description &quot;tomcat7&quot;
</span><span class='line'>
</span><span class='line'>  start on runlevel [2345]
</span><span class='line'>  stop on runlevel [!2345]
</span><span class='line'>  respawn
</span><span class='line'>  respawn limit 10 5
</span><span class='line'>
</span><span class='line'>  # run as non privileged user
</span><span class='line'>  # add user with this command:
</span><span class='line'>  ## adduser --system --ingroup www-data --home /opt/apache-tomcat apache-tomcat
</span><span class='line'>  # Ubuntu 12.04: (use &#39;exec sudo -u apache-tomcat&#39; when using 10.04)
</span><span class='line'>  setuid tomcat
</span><span class='line'>  setgid tomcat
</span><span class='line'>
</span><span class='line'>  # adapt paths:
</span><span class='line'>  env JAVA_HOME=/usr/lib/jvm/java-7-oracle
</span><span class='line'>  env CATALINA_HOME=/opt/tomcat7/latest
</span><span class='line'>  env CATALINA_TMPDIR=/opt/tomcat7/temp
</span><span class='line'>  env HOME=/home/tomcat
</span><span class='line'>
</span><span class='line'>  # adapt java options to suit your needs:
</span><span class='line'>  env JAVA_OPTS=&quot;-Djava.awt.headless=true&quot;
</span><span class='line'>  env CATALINA_OPTS=&quot;-Xmx1536M -server&quot;
</span><span class='line'>
</span><span class='line'>  exec $CATALINA_HOME/bin/catalina.sh run
</span><span class='line'>
</span><span class='line'>  # cleanup temp directory after stop
</span><span class='line'>  post-stop script
</span><span class='line'>    rm -rf /opt/tomcat7/temp/*
</span><span class='line'>  end script
</span></code></pre></td></tr></table></div></figure>


<p>In this situation I had a &ldquo;normal home&rdquo; for tomcat because I needed it, but your requirements
may work differently.</p>

<p>I hope that&rsquo;s useful to somebody.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet Http Source for files]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2013/11/12/puppet-http-source-for-files/"/>
    <updated>2013-11-12T13:59:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2013/11/12/puppet-http-source-for-files</id>
    <content type="html"><![CDATA[<p>Sometimes you would like to use an http URL as the source file for <a href="http://puppetlabs.com/">puppet</a>; while it&rsquo;s being discussed
<a href="http://projects.puppetlabs.com/issues/5783">since long</a>, no implementation has been created so far.</p>

<p>Of course it would be better to periodically download the file from its http source to the puppet master,
and then use puppet file server to send such file to our client; but that&rsquo;s impractical in some contexts, especially
if you&rsquo;re using your puppet in headless mode, i.e. without a master. In such situations you may <strong>really</strong> want to
source files from http, <strong>without</strong> redownloading them if they haven&rsquo;t changed.</p>

<p>I found a good way to do it is to use the excellent <a href="http://www.gnu.org/software/wget/">wget</a> command line tool.</p>

<p>This is an example of what I use to keep my installation of <a href="http://www.jenkins-ci.org">Jenkins</a> up to date:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>class jenkins {
</span><span class='line'>  exec { "/usr/bin/wget --timestamping http://mirrors.jenkins-ci.org/war-stable/latest/jenkins.war":
</span><span class='line'>      alias =&gt; "jenkinslatest",
</span><span class='line'>      cwd =&gt; "/tmp",
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  file { "/opt/tomcat7/latest/webapps/jenkins.war":
</span><span class='line'>      ensure =&gt; present,
</span><span class='line'>      source =&gt; "/tmp/jenkins.war",
</span><span class='line'>      alias =&gt; "jenkinswar",
</span><span class='line'>      require =&gt; Exec["jenkinslatest"] }
</span><span class='line'>
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>The <em>timestamping</em> flag will let wget check the remote server for file modification time; if file hasn&rsquo;t changed,
it won&rsquo;t be redownloaded.</p>

<p>Just choose a proper directory for temporary downloads (tmp is volatile and gets sometimes cleaned up at runtime as well),
make sure the server properly sets the Last-Modified header and remember to refresh your other resources when files change,
and you&rsquo;re done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick log for bash scripts, with line limit]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2013/10/08/quick-log-for-bash-scripts/"/>
    <updated>2013-10-08T21:18:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2013/10/08/quick-log-for-bash-scripts</id>
    <content type="html"><![CDATA[<p>Sometimes you need to write a quick shell script; many a time, you need to put it on a server,
and launch it every now and then, or run it in a cron job. That script may end up doing something
important and/or altering the state of the server machine.</p>

<p>If that script starts being using often enough, you&rsquo;ll want logging as well, and that can be
a complex beast to tame, for logs require rotation and deletion, otherwise the beast will eat up
all your disk space. Setting up <a href="http://linuxcommand.org/man_pages/logrotate8.html">logrotate</a> for a
single shell script looks like an overkill to me most of the times.</p>

<p>So what? Many a times logging will be neglected, and you&rsquo;ll lose the ability to track what happened
and why.</p>

<p>This is my quick recipe for a basic bash logging solution with line-based truncation: the logfile
will never exceed <strong>RETAIN_NUM_LINES</strong> lines (actually, it will never exceed such size when the script
is launched, so the number of lines when the script has run is RETAIN_NUM_LINES + number of lines logged by
the script).</p>

<p>Whenever you use the <em>log</em> function you&rsquo;ll get output on stdout as well, complete with a timestamp.</p>

<figure class='code'><figcaption><span> (quicklog.sh)</span> <a href='http://mostlyunixish.franzoni.eu/downloads/code/quicklog.sh'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># set LOGFILE to the full path of your desired logfile; make sure</span>
</span><span class='line'><span class="c"># you have write permissions there. set RETAIN_NUM_LINES to the</span>
</span><span class='line'><span class="c"># maximum number of lines that should be retained at the beginning</span>
</span><span class='line'><span class="c"># of your program execution.</span>
</span><span class='line'><span class="c"># execute &#39;logsetup&#39; once at the beginning of your script, then </span>
</span><span class='line'><span class="c"># use &#39;log&#39; how many times you like.</span>
</span><span class='line'>
</span><span class='line'><span class="nv">LOGFILE</span><span class="o">=</span>quicklog.sh.log
</span><span class='line'><span class="nv">RETAIN_NUM_LINES</span><span class="o">=</span>10
</span><span class='line'>
</span><span class='line'><span class="k">function </span>logsetup <span class="o">{</span>
</span><span class='line'>    <span class="nv">TMP</span><span class="o">=</span><span class="k">$(</span>tail -n <span class="nv">$RETAIN_NUM_LINES</span> <span class="nv">$LOGFILE</span> 2&gt;/dev/null<span class="k">)</span> <span class="o">&amp;&amp;</span> <span class="nb">echo</span> <span class="s2">&quot;${TMP}&quot;</span> &gt; <span class="nv">$LOGFILE</span>
</span><span class='line'>    <span class="nb">exec</span> &gt; &gt;<span class="o">(</span>tee -a <span class="nv">$LOGFILE</span><span class="o">)</span>
</span><span class='line'>    <span class="nb">exec </span>2&gt;&amp;1
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>log <span class="o">{</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;[$(date)]: $*&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>logsetup
</span><span class='line'>
</span><span class='line'>log hello this is a log
</span></code></pre></td></tr></table></div></figure>


<p>Launch this a lot of times and you&rsquo;ll end up with this:</p>

<figure class='code'><figcaption><span> (quicklog.sh.log)</span> <a href='http://mostlyunixish.franzoni.eu/downloads/code/quicklog.sh.log'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[Tue Oct  8 20:57:49 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:49 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:50 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:51 CEST 2013]: hello this is a log
</span><span class='line'>[Tue Oct  8 20:57:52 CEST 2013]: hello this is a log
</span></code></pre></td></tr></table></div></figure>


<p>Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apt-get update: fixing 'package index files are corrupted']]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2013/03/06/apt-get-update-fixing-package-index-files-are-corrupted/"/>
    <updated>2013-03-06T13:34:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2013/03/06/apt-get-update-fixing-package-index-files-are-corrupted</id>
    <content type="html"><![CDATA[<p>Sometimes when performing your daily <code>apt-get update</code>, you&rsquo;ll experience messages like</p>

<blockquote>
E: The package lists or status file could not be parsed or opened.
</blockquote>


<p>or</p>

<blockquote>
The package index files are corrupted
</blockquote>


<p>Such messages usually don&rsquo;t go away for quite a long time, and may prevent legitimate updates from installing.</p>

<p>This usually happens even more frequently if using a proxy to access apt archives.</p>

<p>While I don&rsquo;t know what&rsquo;s the root problem, I&rsquo;ve got a quick workaround that seems to fix the immediate error:</p>

<pre>
sudo -s -H bash -c 'apt-get clean && rm -f /var/lib/apt/lists/* ; rm -f /var/lib/apt/lists/partial/* && apt-get clean && apt-get update'
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wmctrl: gather and focus your chosen window by hotkey]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2013/01/29/wmctrl-gather-and-focus-your-chosen-window-by-hotkey/"/>
    <updated>2013-01-29T18:35:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2013/01/29/wmctrl-gather-and-focus-your-chosen-window-by-hotkey</id>
    <content type="html"><![CDATA[<p>I find it extremely handy to be able to recall my windows by just using the keyboard.</p>

<p>It&rsquo;s pretty easy to do in Linux, just use:</p>

<p><code>wmctrl -x -R &lt;WM_CLASS&gt;</code></p>

<p>you can find the WM_CLASS of any window using this command:</p>

<p><code>xprop | grep WM_CLASS</code></p>

<p>then clicking on the desired Window. There may be more than one match, just choose one.</p>

<p>Example:</p>

<p><code>wmctrl -x -R "Gnome-terminal"</code></p>

<p>When you execute such command, the windows matching such class will be gathered on the
current workspace and focused; you can assign global hotkeys in Gnome with System &ndash;>
Preferences &ndash;> Keyboard &ndash;> Shortcuts. The Windows key (Super) is usually a great candidate
for such global hotkeys.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh-copy-id with nonstandard sshd port]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/11/06/ssh-copy-id-with-nonstandard-sshd-port/"/>
    <updated>2012-11-06T22:49:00+01:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/11/06/ssh-copy-id-with-nonstandard-sshd-port</id>
    <content type="html"><![CDATA[<ul>
<li><strong>UPDATE:</strong> modern ssh-copy-id often support a -p parameter for the port. So this trick is unnecessary and won&rsquo;t probably work. *</li>
</ul>


<p><a href="http://linux.die.net/man/1/ssh-copy-id">ssh-copy-id</a> is a cool script which is usually distributed along openssh client nowadays;
it performs an automatic install of your local public SSH key to a remote server. Its syntax is simply:</p>

<p><code>ssh-copy-id [-i [identity_file]] [user@]machine</code></p>

<p>You may have spotted there&rsquo;s no builtin way of telling it what&rsquo;s the port of the remote server; a workaround exists which leverages
the way arguments are passed to the script (it&rsquo;s a simple bash file, take a look at it. You can find various versions around <a href="https://gist.github.com/378862">the internet</a>).</p>

<p>Just do this:</p>

<p><code>ssh-copy-id '-p [port_number] [-i [identity_file]] [user@]machine'</code></p>

<p>And enjoy your newly-added SSH key!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh client: stopping key verification complaints inside your own private network]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/08/26/ssh-client-stop-complaining-inside-my-network/"/>
    <updated>2012-08-26T15:55:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/08/26/ssh-client-stop-complaining-inside-my-network</id>
    <content type="html"><![CDATA[<p>If you develop enough software, most probably you&rsquo;ll have a test/development network at your service.</p>

<p>In such networks, which are usually handled through a virtualization infrastructure, machines come and go very quickly.
But ssh clients are usually unhappy about that:</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
The authenticity of host '192.168.0.208 (192.168.0.208)' can't be established.
RSA key fingerprint is 31:4d:8b:97:c8:57:04:85:6a:1b:72:54:46:ab:04:bc.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.0.208' (RSA) to the list of known hosts.
root@192.168.0.208's password: 
</code></pre>

<p>The first time you connect, you&rsquo;re asked if the fingerprint is correct. The second time you&rsquo;ll just be allowed to connect:</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
root@192.168.0.208's password: 
</code></pre>

<p>What then if the machine at such ip address changes, because it&rsquo;s rebuilt or modified and the ssh host key is not retained?</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that a host key has just been changed.
The fingerprint for the RSA key sent by the remote host is
7b:42:03:5f:5c:8d:5a:2b:6a:a4:1e:d6:0d:05:de:38.
Please contact your system administrator.
Add correct host key in /Users/alan/.ssh/known_hosts to get rid of this message.
Offending RSA key in /Users/alan/.ssh/known_hosts:111
  remove with: ssh-keygen -f "/Users/alan/.ssh/known_hosts" -R 192.168.0.208
RSA host key for 192.168.0.208 has changed and you have requested strict checking.
Host key verification failed.
</code></pre>

<p>From the point of view of openssh this may be a serious security breach, and you should fear such message if it happens in the wild if you haven&rsquo;t touched a server &ndash;
a MitM attack is probably going on!</p>

<p>What about your local network? <code>ssh-keygen -R 192.168.0.208</code> will solve that, but you probably didn&rsquo;t need host key authentication since the beginning.</p>

<p>So, just add this:</p>

<pre><code>Host 192.168.0.*
    CheckHostIP no
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no
</code></pre>

<p>at the beginning of your <code>/etc/ssh/ssh_config</code> file, and feel good.</p>

<p>Now, anytime you try connecting inside your network you&rsquo;ll be greeted by this:</p>

<pre><code>alan@melquiades:/etc/ssh$ ssh root@192.168.0.208
Warning: Permanently added '192.168.0.208' (RSA) to the list of known hosts.
root@192.168.0.208's password: 
</code></pre>

<p>No confirmations whatsoever.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thunderbird temporary directory]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/08/23/thunderbird-temporary-directory/"/>
    <updated>2012-08-23T20:18:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/08/23/thunderbird-temporary-directory</id>
    <content type="html"><![CDATA[<p>Whenever you use Thunderbird on Linux you may encounter one annoying behaviour.</p>

<p>If you open a message which is got an attachment &ndash; you just need to open the message, not to save the attachment! &ndash; Thunderbird will place such attachment in your temporary directory, usually <em>/tmp</em>. You find the file there, and you think you used the <em>Save as</em> function to place it there, so you open it and you edit it.</p>

<p>Then you close Thunderbird, and poof! It clears its temporary files and deletes your modified attachment, possibily containing a day&rsquo;s work.</p>

<p>The workaround is simple: just use a launcher that changes Thunderbird TMP directory and use that to start Thunderbird!</p>

<figure class='code'><figcaption><span> (thunderbird)</span> <a href='http://mostlyunixish.franzoni.eu/downloads/code/thunderbird'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>mkdir -p /tmp/thunderbird
</span><span class='line'><span class="nv">TMP</span><span class="o">=</span>/tmp/thunderbird /usr/bin/thunderbird <span class="nv">$*</span>
</span></code></pre></td></tr></table></div></figure>


<p>You may need to adjust the original binary path, then you can put such script in your path before your /usr/bin directory and you&rsquo;re done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disown is your friend]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/08/22/disown-is-your-friend/"/>
    <updated>2012-08-22T19:22:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/08/22/disown-is-your-friend</id>
    <content type="html"><![CDATA[<p>Bash builtin <em>disown</em> is a not-so-well known <a href="http://www.gnu.org/software/bash/manual/html_node/Job-Control-Builtins.html">job control command</a>, and yet
it&rsquo;s an extremely useful one.</p>

<p>So what? You&rsquo;ve started a remote ssh session, launched some command which is taking very, very long to complete, and you just want to go home, or maybe you
feel your connectivity may drop, and so on&hellip; and you forgot to launch <a href="http://www.gnu.org/software/screen">screen</a> (possibly with <a href="https://launchpad.net/byobu">byobu</a>)
or <a href="http://tmux.sourceforge.net">tmux</a> before starting your work!</p>

<p>Now you&rsquo;re desperate and you&rsquo;d just like to go home, but you fear your longstanding jobs will quit if you close your terminal.</p>

<p>Just background your job, launch <em>disown</em> and all the jobs in background will receive no notification whatsoever of your saying goodbye to them;
of course you won&rsquo;t be able to read their output to the terminal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Purging outdated kernels on systems with unattended-upgrades]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/06/25/purging-outdated-kernels-on-systems-with-enabled-autoupdate/"/>
    <updated>2012-06-25T07:33:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/06/25/purging-outdated-kernels-on-systems-with-enabled-autoupdate</id>
    <content type="html"><![CDATA[<p>Whenever I install a production system/server I tend to enable full automatic updating, because
it&rsquo;s usually better that something breaks because of a failed update rather than leaving a production machine unpatched; and if you pick a rather stable distribution (Centos or Ubuntu LTS are good examples) chances that you&rsquo;ll end up with a broken system are fairly low.</p>

<p>Btw let&rsquo;s get back to the point: in such cases you may end up with a disk which was filled up with obsolete kernels. The following snippets allows you to get all outdated kernels which are not in use, so you can automagically pipe its output to an <code>apt-get remove -y</code> in a cron job.</p>

<p>That may sound trivial, but what happens if you&rsquo;re not careful (e.g. if you try deleting all kernels but the latest) is that you might try removing the currently running kernel &ndash; and it&rsquo;s pretty bad if that happens in an unattended cron job.</p>

<figure class='code'><figcaption><span> (ubuntu_get_obsolete_kernel_and_headers_pkgs.py)</span> <a href='http://mostlyunixish.franzoni.eu/downloads/code/ubuntu_get_obsolete_kernel_and_headers_pkgs.py'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="c"># print all installed kernel/headers/etc BUT the current and the latest;</span>
</span><span class='line'><span class="c"># suitable to be used with apt-get remove.</span>
</span><span class='line'><span class="c"># requires aptitude to be installed. Works on Ubuntu and probably Debian</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">subprocess</span> <span class="kn">import</span> <span class="n">check_output</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">runcmd</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">check_output</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="c"># should work for anything until kernel 3.100</span>
</span><span class='line'><span class="n">kernel_version_pattern</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&quot;[23]\.\d{1,2}\.\d{1,2}-\d{1,3}&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">get_kernel_version</span><span class="p">(</span><span class="n">kernelstring</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">kernel_version_pattern</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">kernelstring</span><span class="p">)</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_providing_packages</span><span class="p">(</span><span class="n">pkg</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span> <span class="o">!=</span> <span class="s">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nb">map</span><span class="p">(</span><span class="nb">str</span><span class="o">.</span><span class="n">strip</span><span class="p">,</span>
</span><span class='line'>            <span class="n">runcmd</span><span class="p">(</span><span class="s">&#39;aptitude search ~i~P</span><span class="si">%s</span><span class="s"> -F</span><span class="si">%%</span><span class="s">p&#39;</span> <span class="o">%</span> <span class="n">pkg</span><span class="p">)</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>            <span class="p">)</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">get_nonmatching_packages</span><span class="p">(</span><span class="n">package_list</span><span class="p">,</span> <span class="n">excluding</span><span class="p">):</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">k</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">package_list</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">get_kernel_version</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="ow">in</span>
</span><span class='line'>        <span class="n">excluding</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">all_kernels</span> <span class="o">=</span> <span class="n">get_providing_packages</span><span class="p">(</span><span class="s">&quot;linux-image&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">all_kernels</span><span class="o">.</span><span class="n">sort</span><span class="p">()</span> <span class="c"># lexicographical</span>
</span><span class='line'>
</span><span class='line'><span class="n">kernel_versions</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="n">get_kernel_version</span><span class="p">,</span> <span class="n">all_kernels</span><span class="p">)</span>
</span><span class='line'><span class="n">latest_version</span> <span class="o">=</span> <span class="n">kernel_versions</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="n">current_version</span> <span class="o">=</span> <span class="n">get_kernel_version</span><span class="p">(</span><span class="n">runcmd</span><span class="p">(</span><span class="s">&quot;uname -r&quot;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">kernels_to_remove</span> <span class="o">=</span> <span class="n">get_nonmatching_packages</span><span class="p">(</span><span class="n">all_kernels</span><span class="p">,</span> <span class="p">(</span><span class="n">current_version</span><span class="p">,</span>
</span><span class='line'>    <span class="n">latest_version</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">impl_headers</span> <span class="o">=</span> <span class="n">get_providing_packages</span><span class="p">(</span><span class="s">&quot;linux-headers&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">headers_to_remove</span> <span class="o">=</span> <span class="n">get_nonmatching_packages</span><span class="p">(</span><span class="n">impl_headers</span><span class="p">,</span> <span class="p">(</span><span class="n">current_version</span><span class="p">,</span>
</span><span class='line'>    <span class="n">latest_version</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="c"># This seems to be needed in Ubuntu &gt;= 13.04</span>
</span><span class='line'><span class="c">#base_headers_to_remove = [header.replace(&quot;-generic&quot;, &quot;&quot;) for header in headers_to_remove]</span>
</span><span class='line'><span class="c">#headers_to_remove += base_headers_to_remove</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot; &quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">kernels_to_remove</span> <span class="o">+</span> <span class="n">headers_to_remove</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Suggested use in a cron job, of course, is just:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get remove --purge -y `ubuntu_get_obsolete_kernel_and_headers_pkgs.py`</span></code></pre></td></tr></table></div></figure>


<p><strong>WARNING</strong>: recent changes to the way Ubuntu marks dependencies and provided names for kernel headers require that you uncomment a couple of lines in the script towards the end; just remove the # at the beginning of the lines 46 and 47.</p>

<p><strong>UPDATE</strong>: in recent Ubuntu versions, just invoking <code>apt-get autoremove --purge</code> will do the trick. Such command will remove all automatically installed packages that are no longer required in the running system. It can remove other packages beyond outdated kernels, by the way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dropbox and Mercurial: and lived happily ever after]]></title>
    <link href="http://mostlyunixish.franzoni.eu/blog/2012/06/21/dropbox-and-mercurial-and-lived-happily-ever-after/"/>
    <updated>2012-06-21T13:12:00+02:00</updated>
    <id>http://mostlyunixish.franzoni.eu/blog/2012/06/21/dropbox-and-mercurial-and-lived-happily-ever-after</id>
    <content type="html"><![CDATA[<p>Some days ago I ranted about an issue I had with Mercurial and Dropbox; basically, I did put a mercurial repo in a dropbox
folder, and ended up with <a href="http://twitter.com/franzeur/statuses/214769401055035392/">this kind of mess</a></p>

<p>Mercurial repos inside Dropbox are not a great idea after all. But I had one problem: I sometimes forget to push changes to some files, and Dropbox comes to the rescue; at the same time I need history for such files, and I don&rsquo;t want problems to arise.</p>

<p>I found quite an easy solution:</p>

<ul>
<li>Create your dropbox-aware folder, e.g. &ldquo;somefolder&rdquo;</li>
<li>create a .hg folder inside it, e.g. &ldquo;somefolder/.hg&rdquo;</li>
<li>now use your dropbox client, be it the CLI or the GUI, enable <a href="https://www.dropbox.com/help/175/en">Selective Sync</a> and remove such .hg folder from being synced on your current machine. You must take this step on all machines that you want to use with such technique.</li>
<li>disabling sync for .hg should remove it from the somefolder directory.</li>
</ul>


<p>Now you can use <code>hg init</code> inside &ldquo;somefolder&rdquo;, and you&rsquo;ll obtain a non-synced hg repository.</p>

<p>What for? Whatever! I just create a repo on bitbucket and push/pull changes to/from here.</p>

<p>On other machines, after making sure you&rsquo;ve excluded .hg from syncing, you can just use</p>

<p><code>hg clone -U YOUR_REPO_URL</code></p>

<p>to obtain such .hg directory.</p>

<p>This way:</p>

<ul>
<li>it&rsquo;s impossible to get errors or conflicts like the one I previously mentioned</li>
<li>you get full storicization</li>
<li>Dropbox syncs the actual working copy, letting you have the latest version always 100% synced without manual intervention.</li>
</ul>


<p>Enjoy!</p>
]]></content>
  </entry>
  
</feed>
